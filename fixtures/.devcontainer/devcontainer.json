// For format details, see https://aka.ms/vscode-remote/devcontainer.json or this file's README at:
// https://github.com/microsoft/vscode-dev-containers/tree/v0.122.1/containers/docker-existing-dockerfile
{
  "name": "Existing Dockerfile",
  // Sets the run context to one level up instead of the .devcontainer folder.
  "context": "..",
  // Update the 'dockerFile' property if you aren't using the standard 'Dockerfile' filename.
  "dockerFile": "../Dockerfile",
  // Set *default* container specific settings.json values on container create.
  "settings": {
    "terminal.integrated.shell.linux": null,
    "python.pythonPath": "/opt/conda/bin/python",
    "python.testing.unittestEnabled": false,
    "python.testing.nosetestsEnabled": false,
    "python.testing.pytestEnabled": true,
    "python.testing.pytestArgs": ["."],
    "editor.formatOnSave": true,
    "python.linting.enabled": true,
    "python.linting.flake8Enabled": true,
    "editor.tabCompletion": "on",
    "jupyter.sendSelectionToInteractiveWindow": true,
    "python.formatting.provider": "black",
    "workbench.colorTheme": "Default Dark+",
    "python.linting.mypyEnabled": true,
    "python.linting.flake8Args": ["--max-line-length=88"],
    "python.linting.pylintEnabled": true,
    "python.linting.pylintUseMinimalCheckers": false,
    "cSpell.enabled": true
  },
  // Add the IDs of extensions you want installed when the container is created.
  "extensions": [
    "ms-python.python",
    "VisualStudioExptTeam.vscodeintellicode",
    "njpwerner.autodocstring",
    "ms-python.vscode-pylance",
    "streetsidesoftware.code-spell-checker",
    "esbenp.prettier-vscode",
    "eamodio.gitlens",
    "yzhang.markdown-all-in-one",
    "kortina.vscode-markdown-notes",
    "tchayen.markdown-links"
  ],
  // Use 'forwardPorts' to make a list of ports inside the container available locally.
  "forwardPorts": [8888, 8080],
  // Uncomment the next line to run commands after the container is created - for example installing curl.
  // "postCreateCommand": "apt-get update && apt-get install -y curl",
  "containerEnv": { "PYTHONPATH": "/workspaces/pytest" },
  "shutdownAction": "stopContainer"
}
